# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  pull_request:
#   push:
##     branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_call:
# concurrency: 
#   group: ${{ github.head_ref || github.run_id }}
#   cancel-in-progress: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the jobddd
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - name: Cache file
        id: cache_readme
        uses: actions/cache@v3
        with:
          path: README.md
          key: readme-cache-${{ github.head_ref || github.ref_name }}-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            readme-cache-${{ github.head_ref || github.ref_name }}-
            readme-cache-
#       - name: Dump GitHub
#         run: |
#           echo '${{ toJSON(github) }}'
#       - name: Dump GitHub event
#         run: echo '${{ toJSON(github.event) }}'
      - name: "enable percy"
        id: enable_percy
#         run: echo ::set-output name=push_commit_message::$(git log --format=%B -n 1 HEAD)
        run: |
          if ${{ github.event_name == 'push' }};then
           echo "ENABLE_PERCY=1" >> $GITHUB_OUTPUT
          elif ${{ github.event_name == 'pull_request' }}
           # [[ $(git log --format=%B -n 1 HEAD^2 | grep -o '\[percy\]') ]] && echo "ENABLE_PERCY=1"
           echo "ENABLE_PERCY=1" >> $GITHUB_OUTPUT
          else
           echo "ENABLE_PERCY=0" >> $GITHUB_OUTPUT
          fi
          
      - name: print head info and others
        run: |
          cat README.md
          echo 'github.head_ref => ${{ github.head_ref }}, head_commit message => ${{ github.event.head_commit.message }}'
          echo 'github.ref_name => ${{ github.ref_name }}, head_commit message => ${{ github.event.head_commit.message }}'
          echo 'head_commit message => ${{ github.event.head_commit.message }}'
          echo $PERCY_ENABLE
          echo "The commit message is ${{ steps.enable_percy.outputs.ENABLE_PERCY }}"

#       - name: Dump job context
#         run: echo '${{ toJSON(job) }}'
#       - name: Dump steps context
#         run: echo '${{ toJSON(steps) }}'
#       - name: Dump runner context
#         run: echo '${{ toJSON(runner) }}'
