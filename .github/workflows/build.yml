name: show changed files

on:
  pull_request:
#     types:
#       - closed
#   schedule:
#     - cron: '*/5 * * * *' #Everyday at 21:02
  # push:
  #   branches:
  #     - main
  workflow_dispatch:
  workflow_call:

defaults:
  run:
    shell: bash -l {0}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Dump GitHub
        run: echo '${{ toJSON(github) }}'
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 #required so that github.event.pull_request.base.sha is availabe for diff check below
        id: checkout
        # if: github.event_name == 'pull_request'

      # - name: Checkout repository
      #   uses: actions/checkout@v3
      #   if: github.event_name == 'push' && github.ref == 'refs/heads/main'

      - name: Show changed files in PR or master branch
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          ls -lrtha && ls -lrtha .git/
          echo "The short SHA is $(git rev-parse --short ${{ github.event.pull_request.head.sha || github.sha }})"
          echo "GITHUB_SHA is : $GITHUB_SHA" # for pr this is test merge-commit DO NOT USE THIS TO TAG DOCKER IMAGES!
          echo 'pr base sha is : ${{ github.event.pull_request.base.sha }}' # base commit of PR
          echo 'pr head sha is: ${{ github.event.pull_request.head.sha }}' # Head commit of PR, WON'T change for re-runs!
          echo 'before and after is: ${{ github.event.before }} ${{ github.event.after }}'
          if [ "$GITHUB_EVENT_NAME" == "pull_request" ]; then
            git diff --name-only ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }} > changed_files.txt
            cat changed_files.txt
          # elif [ "$GITHUB_EVENT_NAME" == "push" ]; then
          #   git diff --name-only ${{ github.event.before }} ${{ github.event.after }} > changed_files.txt
          fi
          
        shell: bash

      - name: Set GITHUB_OUTPUT
        if: ${{ github.event_name == 'schedule' }}
        id: github_output
        run: |
          changed_files=$(cat changed_files.txt)
          if [[ $changed_files =~ Gemfile\.lock || $changed_files =~ yarn\.lock || $changed_files =~ Gemfile || $changed_files =~ README.md ]]; then
            echo "BASE_CHANGED=true" > $GITHUB_OUTPUT
          else
            echo "BASE_CHANGED=false" > $GITHUB_OUTPUT
          fi
      
      - name: Print
        if: steps.github_output.outputs.BASE_CHANGED == 'true'
        run: |
          echo "GITHUB_OUTPUT: ${{ steps.github_output.outputs.BASE_CHANGED }}"
          echo 'github.head_ref => ${{ github.head_ref }}, head_commit message => ${{ github.event.head_commit.message }}'
          echo 'github.ref_name => ${{ github.ref_name }}, head_commit message => ${{ github.event.head_commit.message }}'
          echo 'head_commit message => ${{ github.event.head_commit.message }}'
          echo 'pr head commit -> ${{ github.event.pull_request.head.sha }}'
          echo "GITHUB_SHA is $GITHUB_SHA"
