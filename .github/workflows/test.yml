name: Build Docker Images
on: [push, repository_dispatch]

env:
  WORKFLOW_ENV: workflow
jobs:
  # build:
  #   name: RedisTimeSeries
  #   runs-on: ubuntu-latest
  #   steps:
  #     - id: actions-runner
  #       uses: pozetroninc/github-action-get-latest-release@master
  #       with:
  #         repository: actions/runner
  #     - name: Print outputs
  #       run: |
  #         echo "${{ steps.actions-runner.outputs.id }} ${{ steps.actions-runner.outputs.release }} "
  # container-job:
  #   runs-on: ubuntu-latest
  #   env:
  #     JOB_ENV: job
  #   container:
  #     image: alpine
  #   steps:
  #     - name: Print vars
  #       run: |
  #         echo "$WORKFLOW_ENV $JOB_ENV"
  my-job:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        # Set N number of parallel jobs you want to run
        # Remember to update ci_node_index below to 0..N-1
        ci_node_total: [2]
        # set N-1 indexes for parallel jobs
        # When you run 2 parallel jobs then first job will have index 0, the second job will have index 1 etc
        ci_node_index: [0, 1]
    steps:
      - run: echo ${{ github.job }} # Will only return the job_id: "my-job"
      - run: |
          JOB_NAME="OS ${{ matrix.os }}"
          echo $JOB_NAME
          mkdir -p coverage/one
          mkdir -p coverage/two
          mkdir -p tmp && touch tmp/one.txt tmp/two.txt
          echo "JOB_NAME=$JOB_NAME" > coverage/one/out_${{ github.run_id }}_${{ github.job }}.txt
          echo "JOB_NAME=2" > coverage/one/.out_${{ github.run_id }}_${{ github.job }}.txt
          touch coverage/two/.file.txt coverage/two/out_2_${{ github.run_id }}_${{ github.job }}.txt
          ls -laR
      - name: Upload coverage
        uses: actions/upload-artifact@v3
        with:
            name: artifacts-${{ github.run_id }}
            path: |
              tmp/*.txt
              coverage/
  download:
    needs: [my-job]
    runs-on: ubuntu-latest
    container:
      image: alpine
    steps:
    - uses: actions/download-artifact@v3
      with:
        name: artifacts-${{ github.run_id }}
        path: /app
    - name: Display structure of downloaded files
      working-directory: /app
      run: |
        pwd 
        ls -laR
        ls -laR tmp || true
        ls -laR coverage/ || true
      
