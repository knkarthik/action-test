name: caller

# concurrency:
#   group: ${{ github.workflow }}-${{ github.ref_name }}-${{ github.run_id }}
#   cancel-in-progress: false

on:
  push:
    branches-ignore:
      - main
  pull_request:

jobs:
  call:
    if: ${{ github.event_name == 'push' || github.event.inputs.test_push == 'true' }} 
    uses: ./.github/workflows/called.yml
    with:
      concurrency_key: ${{ github.run_id }}

  test-job:
    runs-on: ubuntu-latest
    needs: ['call']
    if: ${{ failure() && needs.call.result == 'failure' }}
    env:
      JSON: ${{ toJSON(github) }}
      NEEDS: ${{ toJSON(needs) }}
      # JOB: ${{ toJSON(job) }}
      GH_TOKEN: ${{ secrets.READ_CLEARSPELL_VARIABLES }}
    steps:
      - run: echo $JSON
      - run: echo $NEEDS
      - name: List Failed Jobs
        id: list-failed-jobs
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          result-encoding: string
          script: |
            const { data } = await github.rest.actions.listJobsForWorkflowRun({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: context.runId,
            });

            console.log(data);

            const failedJobs = data.jobs.filter(job => job.conclusion === 'failure');
            console.log(failedJobs);
            const failedJobLinks = failedJobs.map(job => `<${job.html_url}|${job.name}>`);
            const branchName = context.ref_name;
            const run_url = `${context.server_url}/${context.repository}/actions/runs/${context.run_id}`
            console.log(context)
            console.log(run_url)
            const workflowHeader = {
              type: 'section',
              text: {
                type: 'mrkdwn',
                text: `:x: <${run_url}|Workflow run> failed for branch *${branchName}*`,
              },
            };
            const failedJobBlocks = [{
              type: 'section',
              text: {
                type: 'mrkdwn',
                text: `Failed jobs: ${failedJobLinks.join(', ')}`,
                "unfurl_links": false,
              },
            }];
            const blocks = {
              "blocks": [
                workflowHeader,
                ...failedJobBlocks
              ]
            };
            console.log('Slack Blocks:', JSON.stringify(blocks));
            const message = JSON.stringify(blocks);
            return message;
      - name: Send Slack Notification
        uses: slackapi/slack-github-action@v1.23.0
        with:
          channel-id: ${{ secrets.SLACK_CHANNEL }}
          payload: ${{ steps.list-failed-jobs.outputs.result }}
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
