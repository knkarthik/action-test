name: dependabot
on: push

jobs:
  echo-input:
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: '20.x'
      # - run: npm ci
      # or one-off:
      - run: npm install libsodium-wrappers
      - uses: actions/github-script@v7
        env:
          OWNER: knkarthik
          REPO: action-test
          SECRET: supersecret
        with:
          github-token: ${{ secrets.DEP_PAT_TEST }}
          script: |
            const OWNER = process.env.OWNER
            const REPO = process.env.REPO
            const SECRET = process.env.SECRET
            const _sodium = require('libsodium-wrappers')
            
            const key = await github.rest.dependabot.getRepoPublicKey({
              owner: OWNER,
              repo: REPO,
            });

            console.log("key printed")
            let encrypted = ''
            await _sodium.ready
            const sodium = _sodium;
              console.log("Convert the secret and key to a Uint8Array.")
              console.log(data.key)
              console.log(SECRET)
              // Convert the secret and key to a Uint8Array.
              let binkey = sodium.from_base64(key, sodium.base64_variants.ORIGINAL)
              let binsec = sodium.from_string(SECRET)

              // Encrypt the secret using libsodium
              let encBytes = sodium.crypto_box_seal(binsec, binkey)
              
              // Convert the encrypted Uint8Array to Base64
              encrypted = sodium.to_base64(encBytes, sodium.base64_variants.ORIGINAL)
             
              // Print the output
            
              console.log(encrypted)
              resp = await github.rest.dependabot.createOrUpdateRepoSecret({
              owner: OWNER,
              repo: REPO,
              secret_name: "DEPENDABOT_SECRET",
              encrypted_value: encrypted
            });
            
            console.log(resp)

            
