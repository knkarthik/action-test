name: Create Issue on New Release
run-name: ${{ github.workflow }}-${{ inputs.logLevel }}
on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
        type: choice
        options:
        - info
        - warning
        - debug
        - option 4
      tags:
        description: 'Test scenario tags'
        required: false
        type: boolean
      environment:
        description: 'Environment to run tests against'
        type: environment
        required: true
jobs:
  build:
    uses: ./.github/workflows/ci.yml
    secrets: inherit
  create-issue:
    runs-on: ubuntu-latest
    steps:
      - name: Dump GitHub context
        id: github_context_step
        env:
          JSON: ${{ toJSON(github) }}
        run: echo $JSON
      - name: Get Latest Release Info
        id: relase-info
        run: |
          latest_release=$(curl --silent "https://api.github.com/repos/external-secrets/external-secrets/releases/latest")
          echo "RELEASE_TAG=$(echo ${latest_release} | jq -r .tag_name)" >> $GITHUB_OUTPUT
          echo "RELEASE_HTML_URL=$(echo ${latest_release} | jq -r .html_url)" >> $GITHUB_OUTPUT
          echo "RELEASE_PUBLISHED_AT=$(echo ${latest_release} | jq -r .published_at)" >> $GITHUB_OUTPUT
          echo "RELEASE_BODY=$(echo ${latest_release} | jq -r .body)" >> $GITHUB_OUTPUT
      - name: Debug RELEASE_TAG
        run: echo "RELEASE_TAG = ${{ steps.relase-info.outputs.RELEASE_TAG }}"
      - name: Create Issue
        if: ${{ steps.relase-info.outputs.RELEASE_TAG != 'helm-chart-0.9.5' }}
        run: |
          issue_title="New external-secrets release: ${{ steps.relase-info.outputs.RELEASE_TAG }}"
          issue_body="[${{ steps.relase-info.outputs.RELEASE_TAG }}](${{ steps.relase-info.outputs.RELEASE_HTML_URL }}) has been released on ${{ steps.relase-info.outputs.RELEASE_PUBLISHED_AT }}."
          label="external-secret-${{ steps.relase-info.outputs.RELEASE_TAG }}"
          exists=$(curl -s \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}"\
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "https://api.github.com/repos/knkarthik/action-test/issues?labels=$label")
          echo $exists
          exists=$(echo $exists | jq -r 'length')
          jq --version
          [[ $exists -eq 0 ]] && curl -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
               -d '{"title": "'"$issue_title"'","body":"'"$issue_body"'","assignees":["knkarthik"],"labels":["'"$label"'"]}' \
               -X POST "https://api.github.com/repos/knkarthik/action-test/issues" || true
