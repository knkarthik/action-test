name: Production Deploy


on:
  push:
    branches:
      - "main"

  workflow_dispatch: 
    inputs:
      deploy:
        description: "Check this to perform production deploy"
        type: boolean

jobs:
  
  build-and-test:
    if: ${{ github.event_name == 'push' }}
    secrets: inherit
    uses: ./.github/workflows/build-and-test.yml
    with:
      concurrency_key: ${{ github.run_id }}


  production-ember-build:
    if: always() && !failure() && !cancelled() && github.ref_name == 'main' && (inputs.deploy || github.event_name == 'push' )
    needs: [build-and-test]
    concurrency: 
      group: production-ember-build-${{ github.run_id }}
      cancel-in-progress: false
    runs-on: ubuntu-24.04
    steps:
    - name: Dump GitHub context
      id: github_context_step
      env:
        JSON: ${{ toJSON(github) }}
      run: echo $JSON
    - run: echo "deploying" && sleep 5
    outputs:
      skip_prod_deploy: 'false'
      ember_build_run: 'true'

  build-prod-image:
    if: always() && !failure() && !cancelled() && github.ref_name == 'main' && (inputs.deploy || needs.production-ember-build.outputs.skip_prod_deploy == 'false')
    needs: [production-ember-build]
    concurrency: 
      group: build-prod-image-${{ github.run_id }}
      cancel-in-progress: false
    runs-on: ubuntu-24.04
    steps:
      - name: Dump needs context
        env:
          JSON: ${{ toJSON(needs) }}
        run: echo $JSON
      - run: echo "build image" && sleep 5

  production-deploy:
    if: always() && !failure() && !cancelled() && github.ref_name == 'main' && (inputs.deploy || needs.production-ember-build.outputs.skip_prod_deploy == 'false')
    needs: [production-ember-build]
    runs-on: ubuntu-24.04
    concurrency: 
      group: production-deploy
      cancel-in-progress: false
    steps:
      - name: Dump needs context
        env:
          JSON: ${{ toJSON(needs) }}
        run: echo $JSON
      - name: prod deploy
        id: prod-deploy
        run: echo "URL=prod" >> $GITHUB_OUTPUT


  deploy-eks:
    if: always() && !failure() && !cancelled() && github.ref_name == 'main' && (inputs.deploy || needs.production-ember-build.outputs.skip_prod_deploy == 'false')
    needs: [build-prod-image, production-deploy]
    runs-on: ubuntu-24.04
    concurrency: 
      group: production-deploy-eks
      cancel-in-progress: false
    steps:
      - name: Dump needs context
        env:
          JSON: ${{ toJSON(needs) }}
        run: echo $JSON
      - name: eks deploy
        run: echo "eks deploy" && sleep 1

  invalidate-cache:
    if: always() && !failure() && !cancelled() && github.ref_name == 'main' && (inputs.deploy || needs.production-ember-build.outputs.skip_prod_deploy == 'false')
    needs: [production-deploy,deploy-eks]
    runs-on: ubuntu-24.04
    concurrency: 
      group: production-deploy-eks
      cancel-in-progress: false
    steps:
      - name: Dump needs context
        env:
          JSON: ${{ toJSON(needs) }}
        run: echo $JSON
      - name: eks deploy
        run: echo "eks deploy" && sleep 1
